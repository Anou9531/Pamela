#!/bin/sh
# pgrammar
# PAMELA grammar checking launch script
#
# Copyright Â© 2016 Dynamic Object Language Labs Inc.
#
# This software is licensed under the terms of the
# Apache License, Version 2.0 which can be found in
# the file LICENSE at the root of this distribution.

program=$(basename $0)
dir=$(dirname $0)
export PAMELA_CWD="$(pwd -P)"
cd "$dir"
cd ../grammar
top="."
logs="$top/logs"

if [ ! -d "$logs" ]; then
    mkdir "$logs"
fi

LEIN_JVM_OPTS="${LEIN_JVM_OPTS:--server}"
JVM_OPTS="${JVM_OPTS:-$LEIN_JVM_OPTS}"
PAMELA_OPTS="${PAMELA_OPTS:-$JVM_OPTS}"
PAMELA_MODE="${PAMELA_MODE:-dev}"

# attempt to silence leiningen unless the user has set LEIN_SILENT=false
if [ "$LEIN_SILENT" = "false" ]; then
    unset LEIN_SILENT
else
    # assumes https://github.com/emezeske/lein-cljsbuild/issues/417
    LEIN_SILENT="true"
fi

# ensure pamela does not use PAGER to guess we are in the repl
unset PAGER

verbose=0
logfile="$logs/$program.log"
errfile="$logs/${program}-errors.log"
target="$top/target"
jar="$target/uberjar/$program.jar"

# functions ------------------------------------------
log() {
  # do NOT log now
  # echo $* >> "$logfile"
  echo $*
}

vlog() {
    [ $verbose -eq 0 ] || log "$@"
}

vvlog() {
    [ $verbose -lt 2 ] || log "$@"
}

err() {
  # as log only echos we do not need to repeat this here
  # log "${program}: $*"
  echo >&2 "${program}: $*"
}

# main program -----------------------------------------------

if [ -e "$jar" ]; then
    vvlog java $PAMELA_OPTS -jar $jar $*
    exec java $PAMELA_OPTS -jar $jar $* 2> $errfile
fi

if [ ! -e "project.clj" ]; then
    err "missing project.clj"
    exit 1
fi

leinargs="run --"

usage() {
    err "invalid command line"
    exit 1
}

i=0
input=""
inputtemp=""
output=""
while [ $# -gt 0 ]; do
    i=$(( $i + 1 ))
    field=$(printf "%03d" $i)
    case "$1" in
        (-v|--verbose)
            leinargs="$leinargs $1"
            verbose=$(( $verbose + 1 ))
            ;;
        (-h|--help|-V|--version)
            leinargs="$leinargs $1"
            ;;
        (-i|--input)
            if [ $# -gt 1 ]; then
                leinargs="$leinargs $1"
                shift
                if [ "$1" = "-" ]; then
                    inputtemp=$(mktemp /tmp/pamela.STDIN.XXXXXX)
                    input=$inputtemp
                    cat > $input
                else
                    input="$1"
                fi
                if [ ! -e "$input" ]; then
                    input="$PAMELA_CWD/$input"
                    if [ ! -e "$input" ]; then
                        err "input file does not exist: $input"
                        exit 1
                    fi
                fi
                leinargs="$leinargs $input"
            else
                usage
            fi
            ;;
        (-o|--output)
            if [ $# -gt 1 ]; then
                leinargs="$leinargs $1"
                shift
                if [ "$1" = "-" ]; then
                    # treat "--output -" as if it didn't happen
                    output=""
                else
                    output="$1"
                    outdir="$(dirname $output)"
                    if [ "$outdir" = "." ]; then
                        outdir="$PAMELA_CWD"
                    else
                        if [ ! -d "$outdir" ]; then
                            err "output directory does not exist: $outdir"
                            exit 1
                        fi
                    fi
                    output="$outdir/$(basename $output)"
                    leinargs="$leinargs $output"
                fi
            else
                usage
            fi
            ;;
        (-*)
            usage
            ;;
        (*)
            if [ $# -gt 1 ]; then
                usage
            else
                leinargs="$leinargs $1"
            fi
            ;;
    esac
    shift
done

vvlog lein $leinargs
lein $leinargs 2> $errfile
# lein sometimes returns non-zero when things are fine
rc=0
if [ -s "$errfile" ]; then
    cat >&2 $errfile
    rc=1
else
    rm -f "$errfile"
fi

if [ -n "$inputtemp" ]; then
    rm "$inputtemp"
fi

exit $rc
