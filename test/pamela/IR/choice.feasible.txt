[:pamela
 [:defpclass
  [:symbol "choice-feasible"]
  [:args]
  [:option
   [:meta
    [:meta-entry
     [:doc
      [:string
       "A feasible choice to be chewed by contraint solver"]]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "main"]
     [:cond-map [:cond [:doc [:string "Entry point"]]]]
     [:args]
     [:fn
      [:choose
       [:choose-opt
        [:fn-opt
         [:between-opt
          [:opt-bounds
           [:bounds
            [:bounds-literal
             [:number [:integer "50"]]
             [:number [:integer "100"]]]]]]]]
       [:choice
        [:fn
         [:method-fn
          [:symbol-ref [:symbol "option"]]
          [:method-opt
           [:opt-bounds
            [:bounds
             [:bounds-literal
              [:number [:integer "55"]]
              [:number [:integer "65"]]]]]]]]]
       [:choice
        [:fn
         [:method-fn
          [:symbol-ref [:symbol "option"]]
          [:method-opt
           [:opt-bounds
            [:bounds
             [:bounds-literal
              [:number [:integer "65"]]
              [:number [:integer "75"]]]]]]]]]
       [:choice
        [:fn
         [:method-fn
          [:symbol-ref [:symbol "option"]]
          [:method-opt
           [:opt-bounds
            [:bounds
             [:bounds-literal
              [:number [:integer "75"]]
              [:number [:integer "85"]]]]]]]]]]]]
    [:defpmethod [:symbol "option"] [:args]]]]]]
