{first-tpn-htn
 {:args [plnt],
  :meta {:doc "A example with constraints. "},
  :methods
  {do-a-and-b
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
     :reward 0,
     :controllable false,
     :primitive false,
     :betweens [],
     :display-name "Do A And B",
     :post {:type :literal, :value true},
     :cost 0,
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name plnt,
         :method do-a,
         :args [],
         :temporal-constraints [{:type :bounds, :value [2 4]}]}
        {:type :plant-fn-symbol,
         :name plnt,
         :method do-b,
         :args [],
         :label :b,
         :temporal-constraints [{:type :bounds, :value [3 6]}]}]}]}],
   do-choice
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
     :reward 0,
     :controllable false,
     :primitive false,
     :betweens [],
     :display-name "Do Choice",
     :post {:type :literal, :value true},
     :cost 0,
     :body
     [{:type :choose,
       :body
       [{:type :choice,
         :body
         [{:type :plant-fn-symbol,
           :name this,
           :method do-d-and-e,
           :args []}]}
        {:type :choice,
         :body
         [{:type :plant-fn-symbol,
           :name this,
           :method do-f-and-g,
           :args []}]}],
       :label :choice}]}],
   do-choice-and-c
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
     :reward 0,
     :controllable false,
     :primitive false,
     :betweens [],
     :display-name "Do Choice And C",
     :post {:type :literal, :value true},
     :cost 0,
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name this,
         :method do-choice,
         :args []}
        {:type :plant-fn-symbol,
         :name plnt,
         :method do-c,
         :args [],
         :temporal-constraints [{:type :bounds, :value [85 90]}]}]}]}],
   do-d-and-e
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
     :reward 0,
     :controllable false,
     :primitive false,
     :betweens [],
     :display-name "Do D And E",
     :post {:type :literal, :value true},
     :cost 0,
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name plnt,
         :method do-d,
         :args [],
         :cost 1,
         :reward 2,
         :temporal-constraints [{:type :bounds, :value [1 7]}]}
        {:type :plant-fn-symbol,
         :name plnt,
         :method do-e,
         :args [],
         :cost 2,
         :reward 1,
         :temporal-constraints [{:type :bounds, :value [9 16]}]}]}]}],
   do-f-and-g
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
     :reward 0,
     :controllable false,
     :primitive false,
     :betweens [],
     :display-name "Do F And G",
     :post {:type :literal, :value true},
     :cost 0,
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name plnt,
         :method do-f,
         :args [],
         :cost 3,
         :reward 1,
         :temporal-constraints [{:type :bounds, :value [1 3]}]}
        {:type :plant-fn-symbol,
         :name plnt,
         :method do-g,
         :args [],
         :cost 4,
         :temporal-constraints [{:type :bounds, :value [2 5]}]}]}]}],
   start
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
     :reward 0,
     :controllable false,
     :primitive false,
     :betweens
     [{:type :between,
       :from :choice,
       :to :b,
       :temporal-constraints [{:type :bounds, :value [1 100]}]}],
     :display-name "Start",
     :post {:type :literal, :value true},
     :cost 0,
     :body
     [{:type :parallel,
       :body
       [{:type :plant-fn-symbol,
         :name this,
         :method do-a-and-b,
         :args []}
        {:type :plant-fn-symbol,
         :name this,
         :method do-choice-and-c,
         :args []}],
       :temporal-constraints [{:type :bounds, :value [1 100]}]}],
     :doc "Simple TPN with constraints"}]},
  :type :pclass},
 main
 {:args [],
  :fields
  {:plnt
   {:access :private,
    :initial {:args [], :pclass plant, :type :pclass-ctor},
    :observable false},
   :tpn
   {:access :private,
    :initial {:args [:plnt], :pclass first-tpn, :type :pclass-ctor},
    :observable false}},
  :type :pclass},
 main-htn
 {:args [],
  :fields
  {:plnt
   {:access :private,
    :initial {:args [], :pclass plant, :type :pclass-ctor},
    :observable false},
   :tpn
   {:access :private,
    :initial
    {:args [:plnt], :pclass first-tpn-htn, :type :pclass-ctor},
    :observable false}},
  :type :pclass},
 plant
 {:args [],
  :meta {:doc "The Plant API"},
  :methods
  {do-a
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [2 4]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do A",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}],
   do-b
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [3 6]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do B",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}],
   do-c
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [85 90]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do C",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}],
   do-d
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [1 7]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do D",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}],
   do-e
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [9 16]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do E",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}],
   do-f
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [1 3]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do F",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}],
   do-g
   [{:args [],
     :pre {:type :literal, :value true},
     :temporal-constraints [{:type :bounds, :value [2 5]}],
     :reward 0,
     :controllable false,
     :primitive true,
     :betweens [],
     :display-name "Do G",
     :post {:type :literal, :value true},
     :cost 0,
     :body nil}]},
  :type :pclass}}
