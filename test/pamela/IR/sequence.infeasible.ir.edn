{infeasible-sequence
 {:args [plnt],
  :meta {:doc "An example of infeasible sequence of activties"},
  :methods
  {start
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol, :name plnt, :method do-a, :args []}
        {:type :plant-fn-symbol, :name plnt, :method do-b, :args []}
        {:type :plant-fn-symbol, :name plnt, :method do-c, :args []}
        {:type :plant-fn-symbol, :name plnt, :method do-d, :args []}
        {:type :plant-fn-symbol, :name plnt, :method do-e, :args []}],
       :temporal-constraints [{:type :bounds, :value [10 30]}]}],
     :controllable false,
     :cost 0,
     :display-name "Start",
     :doc "Simple TPN with constraints",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 plant
 {:args [],
  :meta {:doc "The Plant API"},
  :methods
  {do-a
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Do A",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [2 4]}]}],
   do-b
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Do B",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [3 6]}]}],
   do-c
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Do C",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [4 8]}]}],
   do-d
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Do D",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   do-e
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Do E",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [5 10]}]}]},
  :type :pclass}}
