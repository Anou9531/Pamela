{controllable
 {:args [plant],
  :meta {:doc "An example of invoking plant functions."},
  :methods
  {start
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name plant,
         :method action1,
         :args []}
        {:type :delay, :body nil}
        {:type :plant-fn-symbol,
         :name plant,
         :method action1,
         :args [],
         :controllable true}
        {:type :delay, :body nil, :controllable true}
        {:type :plant-fn-symbol,
         :name plant,
         :method action2,
         :args []}
        {:type :delay,
         :body nil,
         :temporal-constraints [{:type :bounds, :value [2 8]}],
         :controllable false}
        {:type :plant-fn-symbol,
         :name plant,
         :method action2,
         :args [],
         :temporal-constraints [{:type :bounds, :value [1 10]}],
         :controllable false}]}],
     :controllable false,
     :cost 0,
     :display-name "Start",
     :doc "Demo method",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 plant
 {:args [],
  :meta {:doc "The Plant API"},
  :methods
  {action1
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Action 1",
     :doc "Take action 1",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   action2
   [{:args [],
     :betweens [],
     :body nil,
     :controllable true,
     :cost 0,
     :display-name "Action 2",
     :doc "Take action 2",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
