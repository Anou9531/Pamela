{choice-tpn
 {:args [plant],
  :meta {:doc "New choose multiple example"},
  :methods
  {choose-multiple
   [{:args [],
     :betweens [],
     :body
     [{:type :choose,
       :body
       [{:type :choice,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant one]},
           :args []}]}
        {:type :choice,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant two]},
           :args []}]}
        {:type :choice,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant three]},
           :args []}]}
        {:type :choice,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant four]},
           :args []}]}
        {:type :choice,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant five]},
           :args []}]}
        {:type :choice,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant six]},
           :args []}]}],
       :exactly 3}],
     :controllable false,
     :cost 0,
     :display-name "Choose Multiple",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 plant
 {:args [],
  :meta {:doc "The Plant API"},
  :methods
  {five
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Five",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   four
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Four",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   one
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "One",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   six
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Six",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   three
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Three",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   two
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Two",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
