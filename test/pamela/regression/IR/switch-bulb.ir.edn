{main
 {:args [],
  :fields
  {:switchedpower
   {:access :private,
    :initial
    {:args [],
     :id "switchedcircuit",
     :pclass psw,
     :plant-part "psw1",
     :type :pclass-ctor},
    :observable false}},
  :meta {:doc "An example circuit: power switch and light bulb"},
  :methods
  {demo
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name this,
         :method toggle-switch,
         :args []}
        {:type :plant-fn-symbol,
         :name this,
         :method toggle-switch,
         :args []}
        {:type :plant-fn-symbol,
         :name this,
         :method toggle-switch,
         :args []}]}],
     :controllable false,
     :cost 0,
     :display-name "Demo",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   toggle-switch
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :plant-fn-symbol,
         :name this,
         :method turn-on-switch,
         :args []}
        {:type :delay,
         :body nil,
         :temporal-constraints [{:type :bounds, :value [10 10]}]}
        {:type :plant-fn-symbol,
         :name this,
         :method turn-off-switch,
         :args []}
        {:type :delay,
         :body nil,
         :temporal-constraints [{:type :bounds, :value [10 10]}]}]}],
     :controllable false,
     :cost 0,
     :display-name "Toggle Switch",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   turn-off-switch
   [{:args [],
     :betweens [],
     :body
     [{:type :plant-fn-field,
       :method turn_off,
       :args [],
       :field :switchedpower}],
     :controllable false,
     :cost 0,
     :display-name "Turn Off Switch",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   turn-on-switch
   [{:args [],
     :betweens [],
     :body
     [{:type :plant-fn-field,
       :field :switchedpower,
       :method turn_on,
       :args []}],
     :controllable false,
     :cost 0,
     :display-name "Turn On Switch",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 psw
 {:args [],
  :meta {:doc "A power switch"},
  :methods
  {turn_off
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Turn Off",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   turn_on
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-name "Turn On",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive true,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
