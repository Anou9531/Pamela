{assert-bounds
 {:args [],
  :fields
  {a
   {:access :private,
    :initial {:name :gensym, :type :lvar},
    :observable false}},
  :meta {:doc "assert example with no time bounds", :version "0.2.0"},
  :methods
  {always-on
   [{:args [],
     :betweens [],
     :body
     [{:type :assert,
       :condition
       {:type :equal,
        :args
        [{:type :field-reference, :pclass this, :field a}
         {:type :literal, :value 1.0}]},
       :body nil,
       :temporal-constraints [{:type :bounds, :value [1 100]}]}],
     :controllable false,
     :cost 0,
     :display-name "Always On",
     :doc "ensure field a is always 1.0",
     :post {:type :literal, :value true},
     :pre {:type :literal, :value true},
     :primitive false,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
