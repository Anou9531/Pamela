{coin-faces
 {:type :pclass,
  :args [],
  :meta {:doc "Enumeration of coin faces"},
  :modes
  {:head {:type :literal, :value true},
   :tail {:type :literal, :value true}}},
 coin
 {:type :pclass,
  :args [],
  :modes
  {:biased {:type :literal, :value true},
   :unbiased {:type :literal, :value true}},
  :fields
  {:observed-face
   {:access :private,
    :observable false,
    :initial
    {:type :pclass-ctor,
     :pclass coin-faces,
     :args
     [[:pclass-arg-keyword :observable]
      true
      [:pclass-arg-keyword :initial]
      [:pclass-arg-keyword :head]]}}},
  :transitions
  {:biased:unbiased
   {:pre {:type :mode-reference, :pclass this, :mode :biased},
    :post {:type :mode-reference, :pclass this, :mode :unbiased},
    :probability {:type :lvar, :name "tBU", :default 0.9}},
   :unbiased:biased
   {:pre {:type :mode-reference, :pclass this, :mode :unbiased},
    :post {:type :mode-reference, :pclass this, :mode :biased},
    :probability {:type :lvar, :name "tUB", :default 0.52}},
   :biased:biased
   {:pre {:type :mode-reference, :pclass this, :mode :biased},
    :post {:type :mode-reference, :pclass this, :mode :biased},
    :probability {:type :lvar, :name "tBB", :default 0.1}},
   :unbiased:unbiased
   {:pre {:type :mode-reference, :pclass this, :mode :unbiased},
    :post {:type :mode-reference, :pclass this, :mode :unbiased},
    :probability {:type :lvar, :name "tUU", :default 0.48}}},
  :methods
  {emit-head
   {:args [],
    :pre
    {:type :equal,
     :args
     [{:type :field-reference, :pclass this, :field :observed-face}
      {:type :mode-reference, :pclass coin-faces, :mode :head}]},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive true,
    :betweens [],
    :post {:type :literal, :value true},
    :cost 0,
    :body nil,
    :doc "Heads"},
   emit-tail
   {:args [],
    :pre
    {:type :equal,
     :args
     [{:type :field-reference, :pclass this, :field :observed-face}
      {:type :mode-reference, :pclass coin-faces, :mode :tail}]},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive true,
    :betweens [],
    :post {:type :literal, :value true},
    :cost 0,
    :body nil,
    :doc "Tails"},
   flip
   {:args [],
    :pre {:type :literal, :value true},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive true,
    :betweens [],
    :post {:type :literal, :value true},
    :cost 0,
    :body
    [{:type :choose,
      :body
      [{:type :choice,
        :body
        [{:type :choose,
          :body
          [{:type :choice,
            :body
            [{:type :plant-fn-symbol,
              :name this,
              :method emit-head,
              :args []}],
            :probability {:type :lvar, :name "eBH", :default 0.8}}
           {:type :choice,
            :body
            [{:type :plant-fn-symbol,
              :name this,
              :method emit-tail,
              :args []}],
            :probability {:type :lvar, :name "eBT", :default 0.2}}]}],
        :condition
        {:type :equal,
         :args
         [{:type :mode-reference, :pclass this, :mode :biased}
          {:type :literal, :value true}]}}
       {:type :choice,
        :body
        [{:type :choose,
          :body
          [{:type :choice,
            :body
            [{:type :plant-fn-symbol,
              :name this,
              :method emit-head,
              :args []}],
            :probability {:type :lvar, :name "eUH", :default 0.51}}
           {:type :choice,
            :body
            [{:type :plant-fn-symbol,
              :name this,
              :method emit-tail,
              :args []}],
            :probability {:type :lvar, :name "eUT", :default 0.49}}]}],
        :condition
        {:type :equal,
         :args
         [{:type :mode-reference, :pclass this, :mode :unbiased}
          {:type :literal, :value true}]}}]}],
    :doc "Flip the coin"},
   flip-sequence
   {:args [],
    :pre {:type :literal, :value true},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive false,
    :betweens [],
    :post {:type :literal, :value true},
    :cost 0,
    :body
    [{:type :sequence,
      :body
      [{:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}
       {:type :plant-fn-symbol, :name this, :method flip, :args []}]}],
    :doc "Series of coin flips"}}},
 main
 {:type :pclass,
  :args [],
  :fields
  {:coin
   {:access :private,
    :observable false,
    :initial {:type :pclass-ctor, :pclass coin, :args []}}}},
 pamela/lvars
 {:type :lvars,
  :lvars
  {"tBU" 0.9,
   "tUB" 0.52,
   "tBB" 0.1,
   "tUU" 0.48,
   "eBH" 0.8,
   "eBT" 0.2,
   "eUH" 0.51,
   "eUT" 0.49}}}
