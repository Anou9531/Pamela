{:hedge-26 {:type :edge, :uid :hedge-26, :end-node :hem-16},
 :hedge-28
 {:type :edge, :uid :hedge-28, :label "1", :end-node :hem-23},
 :hedge-30 {:type :edge, :uid :hedge-30, :end-node :hpt-18},
 :hedge-31 {:type :edge, :uid :hedge-31, :end-node :hpt-19},
 :hedge-32 {:type :edge, :uid :hedge-32, :end-node :hpt-20},
 :hedge-33 {:type :edge, :uid :hedge-33, :end-node :hpt-21},
 :hedge-34 {:type :edge, :uid :hedge-34, :end-node :hpt-22},
 :hem-16
 {:uid :hem-16,
  :type :htn-expanded-method,
  :label "Main()",
  :display-name "Main",
  :network :net-27,
  :incidence-set #{:hedge-26},
  :edges [:hedge-28]},
 :hem-23
 {:uid :hem-23,
  :type :htn-expanded-method,
  :label "Test Of Various\nStatements()",
  :display-name "Test Of Various Statements",
  :network :net-29,
  :incidence-set #{},
  :edges []},
 :henpt-14
 {:uid :henpt-14,
  :type :htn-expanded-nonprimitive-task,
  :label "main",
  :display-name "main",
  :incidence-set #{},
  :edges [:hedge-26]},
 :henpt-15
 {:uid :henpt-15,
  :name "test-of-various-statements",
  :type :htn-expanded-nonprimitive-task,
  :label "TEMP-test-of-various-statements",
  :display-name "Test Of Various Statements",
  :incidence-set #{},
  :edges []},
 :hpt-17
 {:type :htn-primitive-task,
  :uid :hpt-17,
  :name "one-arg-method",
  :incidence-set #{},
  :edges [:hedge-30],
  :label "TEMP-one-arg-method",
  :display-name "One Arg Method",
  :args [:field1.:simple2],
  :argsmap {"x" :field1.:simple2}},
 :hpt-18
 {:args
  [{:type :equal,
    :args
    [{:type :state-variable, :name foo}
     {:type :literal, :value :illuminated}]}],
  :plantid "bsm1",
  :uid :hpt-18,
  :name "assert",
  :argsmap
  {"condition"
   {:type :equal,
    :args
    [{:type :state-variable, :name foo}
     {:type :literal, :value :illuminated}]}},
  :type :htn-primitive-task,
  :label "TEMP-assert",
  :display-name "Assert",
  :incidence-set #{:hedge-30},
  :edges [:hedge-31]},
 :hpt-19
 {:args
  [{:type :equal,
    :args
    [{:type :state-variable, :name bar}
     {:type :literal, :value :dead}]}],
  :plantid "bsm1",
  :uid :hpt-19,
  :name "ask",
  :argsmap
  {"condition"
   {:type :equal,
    :args
    [{:type :state-variable, :name bar}
     {:type :literal, :value :dead}]}},
  :type :htn-primitive-task,
  :label "TEMP-ask",
  :display-name "Ask",
  :incidence-set #{:hedge-31},
  :edges [:hedge-32]},
 :hpt-20
 {:args
  [{:type :equal,
    :args
    [{:type :field-reference-field,
      :pclass this,
      :field :field1,
      :value :simple2}
     {:type :literal, :value "white"}]}],
  :plantid "bsm1",
  :uid :hpt-20,
  :name "ask",
  :argsmap
  {"condition"
   {:type :equal,
    :args
    [{:type :field-reference-field,
      :pclass this,
      :field :field1,
      :value :simple2}
     {:type :literal, :value "white"}]}},
  :type :htn-primitive-task,
  :label "TEMP-ask",
  :display-name "Ask",
  :incidence-set #{:hedge-32},
  :edges [:hedge-33]},
 :hpt-21
 {:args
  [{:type :equal,
    :args
    [{:type :state-variable, :name door}
     {:type :literal, :value :open}]}],
  :plantid "bsm1",
  :uid :hpt-21,
  :name "tell",
  :argsmap
  {"condition"
   {:type :equal,
    :args
    [{:type :state-variable, :name door}
     {:type :literal, :value :open}]}},
  :type :htn-primitive-task,
  :label "TEMP-tell",
  :display-name "Tell",
  :incidence-set #{:hedge-33},
  :edges [:hedge-34]},
 :hpt-22
 {:type :htn-primitive-task,
  :uid :hpt-22,
  :name "initialize",
  :incidence-set #{:hedge-34},
  :edges [],
  :label "TEMP-initialize",
  :display-name "Initialize",
  :args [],
  :argsmap {}},
 :net-25
 {:type :htn-network,
  :uid :net-25,
  :display-name "main",
  :label "main",
  :rootnodes #{:henpt-14}},
 :net-27
 {:type :htn-network,
  :uid :net-27,
  :display-name "Main()",
  :label "Main()",
  :rootnodes #{:henpt-15}},
 :net-29
 {:type :htn-network,
  :uid :net-29,
  :display-name "Test Of Various\nStatements()",
  :label "Test Of Various\nStatements()",
  :rootnodes #{:hpt-17}},
 :network :net-25}
