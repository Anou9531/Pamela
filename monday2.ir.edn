{qc
 {:type :pclass,
  :args [],
  :methods
  {goto
   {:args [loc],
    :pre {:type :literal, :value true},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive true,
    :betweens [],
    :display-name "Goto",
    :post {:type :literal, :value true},
    :cost 0,
    :body nil},
   waypoint
   {:args [wp],
    :pre {:type :literal, :value true},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive false,
    :betweens [],
    :display-name "Waypoint",
    :post {:type :literal, :value true},
    :cost 0,
    :body
    [{:type :plant-fn-symbol,
      :name this,
      :method goto,
      :args [wp]}]}}},
 mission
 {:type :pclass,
  :args [thing],
  :fields
  {:qc1
   {:access :private,
    :observable false,
    :initial
    {:type :pclass-ctor,
     :pclass qc,
     :args [],
     :id "qc1",
     :interface "RMQ",
     :plant-part "part-001"}},
   :qc2
   {:access :private,
    :observable false,
    :initial
    {:type :pclass-ctor,
     :pclass qc,
     :args [],
     :id "qc2",
     :interface "ZMQ",
     :plant-part "part-002"}},
   :qc3
   {:access :private,
    :observable false,
    :initial
    {:type :pclass-ctor,
     :pclass qc,
     :args [],
     :id "qc3",
     :plant-part "part-003"}}},
  :methods
  {fake-waypoint
   {:args [wp],
    :pre {:type :literal, :value true},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive false,
    :betweens [],
    :display-name "Fake Waypoint",
    :post {:type :literal, :value true},
    :cost 0,
    :body
    [{:type :plant-fn-field, :field :qc1, :method goto, :args [wp]}]},
   position
   {:args [a b c],
    :pre {:type :literal, :value true},
    :temporal-constraints [{:type :bounds, :value [0 :infinity]}],
    :reward 0,
    :controllable false,
    :primitive false,
    :betweens [],
    :display-name "Position",
    :post {:type :literal, :value true},
    :cost 0,
    :body
    [{:type :sequence,
      :body
      [{:type :plant-fn-symbol,
        :name this,
        :method fake-waypoint,
        :args [a]}
       {:type :plant-fn-symbol,
        :name this,
        :method fake-waypoint,
        :args [b]}
       {:type :plant-fn-symbol,
        :name this,
        :method fake-waypoint,
        :args [c]}]}]}}},
 demo
 {:type :pclass,
  :args [],
  :fields
  {:thing1
   {:access :private,
    :observable false,
    :initial
    {:type :pclass-ctor,
     :pclass thing,
     :args [],
     :id "thing1",
     :interface "ZMQ",
     :plant-part "part-000"}},
   :htn
   {:access :private,
    :observable false,
    :initial {:type :pclass-ctor, :pclass mission, :args [:thing1]}}}}}
